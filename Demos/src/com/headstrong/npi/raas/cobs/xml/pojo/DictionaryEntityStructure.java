//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-558 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.04.16 at 11:38:43 AM IST 
//


package com.headstrong.npi.raas.cobs.xml.pojo;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DictionaryEntityStructure.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DictionaryEntityStructure">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Group"/>
 *     &lt;enumeration value="Subsidiary"/>
 *     &lt;enumeration value="Fund"/>
 *     &lt;enumeration value="Sub-Fund"/>
 *     &lt;enumeration value="Branch"/>
 *     &lt;enumeration value="Division"/>
 *     &lt;enumeration value="Mandate"/>
 *     &lt;enumeration value="Account"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DictionaryEntityStructure")
@XmlEnum
public enum DictionaryEntityStructure {

    @XmlEnumValue("Group")
    GROUP("Group"),
    @XmlEnumValue("Subsidiary")
    SUBSIDIARY("Subsidiary"),
    @XmlEnumValue("Fund")
    FUND("Fund"),
    @XmlEnumValue("Sub-Fund")
    SUB_FUND("Sub-Fund"),
    @XmlEnumValue("Branch")
    BRANCH("Branch"),
    @XmlEnumValue("Division")
    DIVISION("Division"),
    @XmlEnumValue("Mandate")
    MANDATE("Mandate"),
    @XmlEnumValue("Account")
    ACCOUNT("Account");
    private final String value;

    DictionaryEntityStructure(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DictionaryEntityStructure fromValue(String v) {
        for (DictionaryEntityStructure c: DictionaryEntityStructure.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
